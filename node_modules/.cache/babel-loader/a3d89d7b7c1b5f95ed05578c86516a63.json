{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/components/SearchResult.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Searchresult = () => {\n  _s();\n\n  const results = useSelector(state => state.search.data);\n  const loading = useSelector(state => state.search.loading); // console.log(results);\n\n  return loading === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.map((_ref, i) => {\n      let {\n        poster_path,\n        backdrop_path,\n        original_name,\n        original_title,\n        id\n      } = _ref;\n\n      // console.log(poster_path);\n      if (i < 5) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-4 w-[30rem] ml-[10rem]  \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex w-[5rem] border-4 h-[5rem]\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: true,\n              src: `https://image.tmdb.org/t/p/w500${poster_path || backdrop_path}`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: original_name || original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Searchresult, \"7h5tyT/U5WZKxAahSVnRBkHxCDI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Searchresult;\nexport default Searchresult;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchresult\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/components/SearchResult.jsx"],"names":["React","useSelector","Searchresult","results","state","search","data","loading","map","i","poster_path","backdrop_path","original_name","original_title","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA3B;AACA,QAAMC,OAAO,GAAGN,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaE,OAAzB,CAA3B,CAFyB,CAGzB;;AACA,SAAOA,OAAO,KAAK,IAAZ,GACL,EADK,gBAGL;AAAA,cACGJ,OAAO,CAACK,GAAR,CACC,OAEEC,CAFF,KAGK;AAAA,UAFH;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,aAAf;AAA8BC,QAAAA,aAA9B;AAA6CC,QAAAA,cAA7C;AAA6DC,QAAAA;AAA7D,OAEG;;AACH;AACA,UAAIL,CAAC,GAAG,CAAR,EAAW;AACT,4BACE;AAAc,UAAA,SAAS,EAAC,sCAAxB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,mCACE;AACE,cAAA,KAAK,MADP;AAEE,cAAA,GAAG,EAAG,kCACJC,WAAW,IAAIC,aAChB,EAJH;AAKE,cAAA,GAAG,EAAC;AALN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAA,mCACE;AAAA,wBAAKC,aAAa,IAAIC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA,WAAUC,EAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD;AACF,KAxBF;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAgCD,CApCD;;GAAMZ,Y;UACYD,W,EACAA,W;;;KAFZC,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Searchresult = () => {\n  const results = useSelector((state) => state.search.data);\n  const loading = useSelector((state) => state.search.loading);\n  // console.log(results);\n  return loading === true ? (\n    \"\"\n  ) : (\n    <div>\n      {results.map(\n        (\n          { poster_path, backdrop_path, original_name, original_title, id },\n          i\n        ) => {\n          // console.log(poster_path);\n          if (i < 5) {\n            return (\n              <div key={id} className=\"flex border-4 w-[30rem] ml-[10rem]  \">\n                <div className=\"flex w-[5rem] border-4 h-[5rem]\" >\n                  <img\n                    style\n                    src={`https://image.tmdb.org/t/p/w500${\n                      poster_path || backdrop_path\n                    }`}\n                    alt=\"\"\n                  />\n                </div>\n                <div>\n                  <h1>{original_name || original_title}</h1>\n                </div>\n              </div>\n            );\n          }\n        }\n      )}\n    </div>\n  );\n};\n\nexport default Searchresult;\n"]},"metadata":{},"sourceType":"module"}