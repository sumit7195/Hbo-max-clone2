{"ast":null,"code":"import axios from \"axios\";\nexport const fetchUserRequest = () => {\n  return {\n    type: \"FETCH_USER_REQUEST\"\n  };\n};\nexport const fetchData = data => {\n  return {\n    type: \"FETCH_DATA\",\n    payload: data\n  };\n};\nexport const fetchPopular = data => {\n  return {\n    type: \"FETCH_POPULAR\",\n    payload: data\n  };\n};\nexport const fetchUserFailure = () => {\n  return {\n    type: \"FETCH_USER_FAILURE\"\n  };\n};\nexport function fetch() {\n  return function (dispatch) {\n    dispatch(fetchUserRequest());\n    return axios.get(\"https://api.themoviedb.org/3/trending/movie/day?api_key=b44716bfb3d62913eb0e7024880e9455\").then(_ref => {\n      let {\n        data\n      } = _ref;\n      dispatch(fetchPopular(data));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error.message));\n    });\n  };\n}\nexport function fetchLatest() {\n  return function (dispatch) {\n    dispatch(fetchUserRequest());\n    return axios.get(\"https://api.themoviedb.org/3/trending/tv/day?api_key=b44716bfb3d62913eb0e7024880e9455\").then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      dispatch(fetchData(data));\n    }).catch(error => {\n      dispatch(fetchUserFailure(error.message));\n    });\n  };\n} // export const fetchUserRequest = () => {\n//   return {\n//     type: \"FETCH_USER_REQUEST\",\n//   };\n// };","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/redux/action.js"],"names":["axios","fetchUserRequest","type","fetchData","data","payload","fetchPopular","fetchUserFailure","fetch","dispatch","get","then","catch","error","message","fetchLatest"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAE,YADD;AAELG,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAQP,OAAO,MAAME,YAAY,GAAKF,IAAD,IAAQ;AAEjC,SAAO;AACHF,IAAAA,IAAI,EAAC,eADF;AAEHG,IAAAA,OAAO,EAAED;AAFN,GAAP;AAKH,CAPM;AAaP,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAOP,OAAO,SAASM,KAAT,GAAiB;AACtB,SAAO,UAAUC,QAAV,EAAoB;AACrBA,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AAEJ,WAAOD,KAAK,CAACU,GAAN,CAAU,0FAAV,EACJC,IADI,CACC,QAAc;AAAA,UAAb;AAAEP,QAAAA;AAAF,OAAa;AAClBK,MAAAA,QAAQ,CAACH,YAAY,CAACF,IAAD,CAAb,CAAR;AACD,KAHI,EAIJQ,KAJI,CAIGC,KAAD,IAAS;AACZJ,MAAAA,QAAQ,CAACF,gBAAgB,CAACM,KAAK,CAACC,OAAP,CAAjB,CAAR;AACH,KANI,CAAP;AAOD,GAVD;AAWD;AAGD,OAAO,SAASC,WAAT,GAAsB;AAEzB,SAAO,UAAUN,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AAEA,WAAOD,KAAK,CACTU,GADI,CAEH,uFAFG,EAIJC,IAJI,CAIC,SAAc;AAAA,UAAb;AAAEP,QAAAA;AAAF,OAAa;AAClBK,MAAAA,QAAQ,CAACN,SAAS,CAACC,IAAD,CAAV,CAAR;AACD,KANI,EAOJQ,KAPI,CAOGC,KAAD,IAAW;AAChBJ,MAAAA,QAAQ,CAACF,gBAAgB,CAACM,KAAK,CAACC,OAAP,CAAjB,CAAR;AACD,KATI,CAAP;AAUD,GAbD;AAiBH,C,CAeD;AACA;AACA;AACA;AACA","sourcesContent":["\nimport axios from \"axios\";\n\n\nexport const fetchUserRequest = () => {\n  return {\n    type: \"FETCH_USER_REQUEST\",\n  };\n};\nexport const fetchData = (data) => {\n  return {\n    type: \"FETCH_DATA\",\n    payload: data\n  };\n};\n\n\nexport const fetchPopular  = (data)=>{\n  \n    return {\n        type:\"FETCH_POPULAR\",\n        payload: data\n    }\n\n}\n\n\n\n\n\nexport const fetchUserFailure = () => {\n  return {\n    type: \"FETCH_USER_FAILURE\",\n  };\n};\n\n\nexport function fetch() {\n  return function (dispatch) {\n        dispatch(fetchUserRequest());\n\n    return axios.get(\"https://api.themoviedb.org/3/trending/movie/day?api_key=b44716bfb3d62913eb0e7024880e9455\")\n      .then(({ data }) => {\n        dispatch(fetchPopular(data));\n      })\n      .catch((error)=>{\n          dispatch(fetchUserFailure(error.message))\n      });\n  };\n}\n\n\nexport function fetchLatest(){\n\n    return function (dispatch) {\n      dispatch(fetchUserRequest());\n\n      return axios\n        .get(\n          \"https://api.themoviedb.org/3/trending/tv/day?api_key=b44716bfb3d62913eb0e7024880e9455\"\n        )\n        .then(({ data }) => {\n          dispatch(fetchData(data));\n        })\n        .catch((error) => {\n          dispatch(fetchUserFailure(error.message));\n        });\n    };\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const fetchUserRequest = () => {\n//   return {\n//     type: \"FETCH_USER_REQUEST\",\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}