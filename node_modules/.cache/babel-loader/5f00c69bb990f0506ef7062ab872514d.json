{"ast":null,"code":"const intialStore = {\n  loading: false,\n  data: [],\n  error: ''\n};\n\nconst reducer = function () {\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialStore;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_USER_REQUEST\":\n      return { ...state\n      };\n\n    default:\n      return { ...store\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/redux/reducer.js"],"names":["intialStore","loading","data","error","reducer","store","action","type","state"],"mappings":"AACA,MAAMA,WAAW,GAAG;AAEjBC,EAAAA,OAAO,EAAC,KAFS;AAGjBC,EAAAA,IAAI,EAAG,EAHU;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAApB;;AAaA,MAAMC,OAAO,GAAG,YAA6B;AAAA,MAA5BC,KAA4B,uEAAtBL,WAAsB;AAAA,MAATM,MAAS;;AAGxC,UAAOA,MAAM,CAACC,IAAd;AAEK,SAAK,oBAAL;AACI,aAAM,EACD,GAAGC;AADF,OAAN;;AAOL;AAAS,aAAO,EACZ,GAAGH;AADS,OAAP;AAVb;AAqBJ,CAxBD;;AA2BA,eAAeD,OAAf","sourcesContent":["\nconst intialStore = {\n\n   loading:false,\n   data : [],\n   error :''\n}\n\n\n\n\n\n\n\nconst reducer = (store=intialStore, action)=>{\n\n   \n     switch(action.type){\n \n          case \"FETCH_USER_REQUEST\":\n              return{\n                   ...state\n              }\n\n     \n\n           \n         default: return {\n             ...store\n         }   \n\n     }   \n\n \n\n\n\n\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}