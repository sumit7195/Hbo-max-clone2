{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/components/Trending.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./trending.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetch, fetchDetailMovie } from \"../redux/action\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Trending = props => {\n  _s();\n\n  // const [movie,setMovie] = useState();\n  const movie = useSelector(state => state.popular.data.results);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    props.fetch();\n  }, []);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sliderDiv\",\n    class: \"mt-[3rem] w-[100vm] overflow-hidden  \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"text-white  text-[40px]   \",\n      children: \"Trending Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider  \",\n      children: movie.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \" slide-track  hover:cursor-pointer   hover:opacity-75    shadow-inner shadow-blue-500/40 hover:shadow-indigo-500/40 border-2\",\n        onClick: () => {\n          c;\n          dispatch(fetchDetailMovie(e.id));\n          navigate(\"/movieDetail\", {\n            state: e\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"h-[100%] \",\n          src: `https://image.tmdb.org/t/p/w500${e.poster_path}\n`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Trending, \"taur7N5Bb6OZO2kCLSLSeZomYVU=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = Trending;\nexport default connect(null, {\n  fetch\n})(Trending);\n\nvar _c;\n\n$RefreshReg$(_c, \"Trending\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/components/Trending.jsx"],"names":["useState","useEffect","useNavigate","connect","fetch","fetchDetailMovie","useSelector","useDispatch","Trending","props","movie","state","popular","data","results","dispatch","navigate","map","e","i","c","id","poster_path"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,gBAAhB,QAAwC,iBAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AAEA,QAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,OAA/B,CAAzB;AACF,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACEN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACL,KAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAC,uCAAjC;AAAA,4BACE;AAAI,MAAA,KAAK,EAAC,4BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGQ,KAAK,gBACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGA,KAAK,CAACO,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT;AAEE,QAAA,KAAK,EAAC,8HAFR;AAGE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,CAAC;AACDL,UAAAA,QAAQ,CAACV,gBAAgB,CAACa,CAAC,CAACG,EAAH,CAAjB,CAAR;AACAL,UAAAA,QAAQ,CAAC,cAAD,EAAiB;AAAEL,YAAAA,KAAK,EAAEO;AAAT,WAAjB,CAAR;AAED,SARH;AAAA,+BAUE;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,GAAG,EAAG,kCAAiCA,CAAC,CAACI,WAAY;AACrE,CAHc;AAIE,UAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAVF,SACOH,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADI,GAwBJ,EA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA3CD;;GAAMX,Q;UAGUF,W,EACCC,W,EAKEL,W;;;KATbM,Q;AA6CN,eAAeL,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAyBI,QAAzB,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./trending.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetch, fetchDetailMovie } from \"../redux/action\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nconst Trending = (props) => {\n  // const [movie,setMovie] = useState();\n\n  const movie = useSelector((state) => state.popular.data.results);\nconst dispatch = useDispatch();\n  useEffect(() => {\n    props.fetch();\n  }, []);\n\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"sliderDiv\" class=\"mt-[3rem] w-[100vm] overflow-hidden  \">\n      <h1 class=\"text-white  text-[40px]   \">Trending Movies</h1>\n\n      {movie ? (\n        <div className=\"slider  \">\n          {movie.map((e, i) => (\n            <div\n              key={i}\n              class=\" slide-track  hover:cursor-pointer   hover:opacity-75    shadow-inner shadow-blue-500/40 hover:shadow-indigo-500/40 border-2\"\n              onClick={() => {\n                c\n                dispatch(fetchDetailMovie(e.id))\n                navigate(\"/movieDetail\", { state: e })\n                ;\n              }}\n            >\n              <img\n                class=\"h-[100%] \"\n                src={`https://image.tmdb.org/t/p/w500${e.poster_path}\n`}\n                alt=\"\"\n              />\n              {/* <h3>{e.original_title}</h3> */}\n            </div>\n          ))}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default connect(null, { fetch })(Trending);\n"]},"metadata":{},"sourceType":"module"}