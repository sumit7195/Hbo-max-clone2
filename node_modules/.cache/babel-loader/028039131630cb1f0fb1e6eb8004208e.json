{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/context/AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useState from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nconst AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isAuth, setAuth] = useState(false);\n  const [token, setToken] = useState(\"\");\n\n  const handleLogin = (email, password) => {\n    axios.post({\n      method: \"post\",\n      url: \"https://reqres.in/api/login\",\n      data: {\n        email,\n        password\n      }\n    }).then(res => {\n      setAuth(true);\n      setToken(res.token);\n    }).catch(err => console.log(err));\n  };\n\n  const value = {\n    token,\n    isAuth,\n    handleLogin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AuthContextProvider, \"CH/O3a9fjpCgM+ohN+BrReC9uys=\");\n\n_c = AuthContextProvider;\nexport { AuthContext, AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/context/AuthContext.jsx"],"names":["React","useState","axios","AuthContext","createContext","AuthContextProvider","children","isAuth","setAuth","token","setToken","handleLogin","email","password","post","method","url","data","then","res","catch","err","console","log","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,OAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;;AAGA,MAAMC,mBAAmB,GAAI,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAG5C,QAAM,CAACC,MAAD,EAASC,OAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAmB;AAGtCX,IAAAA,KAAK,CAACY,IAAN,CAAW;AACTC,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,6BAFI;AAITC,MAAAA,IAAI,EAAE;AACJL,QAAAA,KADI;AAEJC,QAAAA;AAFI;AAJG,KAAX,EASCK,IATD,CASOC,GAAD,IAAO;AAEXX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAACS,GAAG,CAACV,KAAL,CAAR;AACF,KAbA,EAcAW,KAdA,CAcMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdb;AAgBA,GAnBD;;AAsBA,QAAMG,KAAK,GAAG;AAACf,IAAAA,KAAD;AAAQF,IAAAA,MAAR;AAAgBI,IAAAA;AAAhB,GAAd;AAGA,sBAEG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEa,KAA7B;AAAA,oBAAsClB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,UAFH;AAcC,CA7CD;;GAAMD,mB;;KAAAA,mB;AAmDN,SAAQF,WAAR,EAAqBE,mBAArB","sourcesContent":["import React from 'react';\nimport useState from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = React.createContext();\n\n\nconst AuthContextProvider =  ({children}) =>{\n\n\nconst [isAuth, setAuth] =   useState(false);\nconst [token, setToken] = useState(\"\")\n\nconst handleLogin = (email, password)=>{\n\n\n axios.post({\n   method: \"post\",\n   url: \"https://reqres.in/api/login\",\n\n   data: {\n     email,\n     password,\n   },\n })\n .then((res)=>{\n\n   setAuth(true);\n   setToken(res.token)\n})\n.catch(err => console.log(err))\n\n}\n\n\nconst value = {token, isAuth, handleLogin}\n\n\nreturn  (\n\n   <AuthContext.Provider value={value}> {children}</AuthContext.Provider>\n)\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\n\nexport {AuthContext ,AuthContextProvider}\n\n\n"]},"metadata":{},"sourceType":"module"}