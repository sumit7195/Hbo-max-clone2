{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/components/MovieDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchMovieDetail } from \"../redux/action\";\nimport Loading from \"./Loading\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar } from \"../components/Navbar\";\nimport background from \"../images/background/background.png\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = props => {\n  _s();\n\n  const location = useLocation();\n  const id = location.state.id;\n  const type = location.state.type;\n  console.log(id, type); // console.log(id)\n\n  useEffect(() => {\n    props.fetchMovieDetail(id, type);\n  }, []); // console.log(location.state.id)\n\n  const movieDetail = useSelector(state => state.detail.data);\n  console.log(movieDetail);\n  const loading = useSelector(state => state.detail.loading);\n  return loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-0\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-[6rem] \",\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      children: movieDetail.map(_ref => {\n        let {\n          backdrop_path,\n          budget,\n          homepage,\n          original_language,\n          original_title,\n          overview,\n          poster_path,\n          runtime,\n          vote_count,\n          genres,\n          release_date,\n          tagline,\n          vote_average,\n          original_name,\n          videos: {\n            results\n          }\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"  flex justify-center content-center shadow-lg   rounded shadow-white  border-4 w-[35rem] m-auto  flex-col hover:cursor-pointer ... \",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://www.youtube.com/watch?v=${results[0].key}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" h-[35rem] flex rounded  justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500${poster_path}`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center justify-items-center content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white text-5xl capitalize \",\n              children: original_title || original_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex  w-[3.8rem] justify-between  items-center ml-[1.2rem] \",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white text-2xl \",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xl\",\n                  children: [vote_average, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AiIcons.AiFillHeart, {\n                style: {\n                  color: \"red\",\n                  fontSize: \"1.5em\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" flex  p-2 justify-around text-white space-x-1 antialiased...\",\n              children: genres.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: [\" \", e.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white flex flex-col  pl-4 antialiased ...\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Overview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetail, \"+PZ1qiZdpS9C9Gg+5C8ul38q0l0=\", false, function () {\n  return [useLocation, useSelector, useSelector];\n});\n\n_c = MovieDetail;\nexport default connect(null, {\n  fetchMovieDetail\n})(MovieDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/components/MovieDetail.jsx"],"names":["React","connect","useSelector","useEffect","fetchMovieDetail","Loading","useLocation","Navbar","background","AiIcons","MovieDetail","props","location","id","state","type","console","log","movieDetail","detail","data","loading","backgroundImage","map","backdrop_path","budget","homepage","original_language","original_title","overview","poster_path","runtime","vote_count","genres","release_date","tagline","vote_average","original_name","videos","results","key","color","fontSize","e","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchMovieDetail } from \"../redux/action\";\nimport Loading from \"./Loading\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar } from \"../components/Navbar\";\nimport background from \"../images/background/background.png\";\nimport * as AiIcons from \"react-icons/ai\";\n\nconst MovieDetail = (props) => {\n  const location = useLocation();\n  const id = location.state.id;\n  const type = location.state.type;\n  console.log(id,type)\n  // console.log(id)\n\n\n  useEffect(() => {\n    props.fetchMovieDetail(id,type);\n  }, []);\n\n  // console.log(location.state.id)\n  const movieDetail = useSelector((state) => state.detail.data);\n  console.log(movieDetail);\n  const loading = useSelector((state) => state.detail.loading);\n\n  return loading === true ? (\n    <Loading></Loading>\n  ) : (\n    <div className=\"mt-0\">\n      <Navbar></Navbar>\n      <div\n        className=\"py-[6rem] \"\n        style={{\n          backgroundImage: `url(${background})`,\n        }}\n      >\n        {movieDetail.map(\n          ({\n            backdrop_path,\n            budget,\n            homepage,\n            original_language,\n            original_title,\n            overview,\n            poster_path,\n            runtime,\n            vote_count,\n            genres,\n            release_date,\n            tagline,\n            vote_average,\n            original_name,\n            videos: { results },\n          }) => (\n            <div className=\"  flex justify-center content-center shadow-lg   rounded shadow-white  border-4 w-[35rem] m-auto  flex-col hover:cursor-pointer ... \">\n              <a href={`https://www.youtube.com/watch?v=${results[0].key}`}>\n                <div className=\" h-[35rem] flex rounded  justify-center\">\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt=\"\"\n                  />\n                </div>\n              </a>\n\n              <div className=\"flex justify-center justify-items-center content-center\">\n                <h3 className=\"text-white text-5xl capitalize \">\n                  {original_title || original_name}\n                </h3>\n              </div>\n              <div className=\"flex justify-between\">\n                <div className=\"flex  w-[3.8rem] justify-between  items-center ml-[1.2rem] \">\n                  <h1 className=\"text-white text-2xl \">\n                    <span className=\"text-xl\">{vote_average} </span>\n                  </h1>\n                  <AiIcons.AiFillHeart\n                    style={{ color: \"red\", fontSize: \"1.5em\" }}\n                  ></AiIcons.AiFillHeart>\n                </div>\n\n                <div className=\" flex  p-2 justify-around text-white space-x-1 antialiased...\">\n                  {genres.map((e) => (\n                    <div>\n                      <h1> {e.name}</h1>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"text-white flex flex-col  pl-4 antialiased ...\">\n                <h1>Overview:</h1>\n                <p>{overview}</p>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { fetchMovieDetail })(MovieDetail);\n"]},"metadata":{},"sourceType":"module"}