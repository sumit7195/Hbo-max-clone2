{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/components/Trending.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./trending.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Trending = () => {\n  _s();\n\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    axios.get(\"https://api.themoviedb.org/3/trending/movie/day?api_key=b44716bfb3d62913eb0e7024880e9455\").then(data => {\n      console.log(data.data.results);\n      setMovie(data.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sliderDiv\",\n    class: \"mt-[2rem] w-[100vm] overflow-hidden  \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"text-white  text-[40px]   \",\n      children: \"Trending Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider  \",\n      children: movie.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \" slide-track  hover:cursor-pointer hover:w-[35rem]  shadow-inner shadow-blue-500/40 hover:shadow-indigo-500/40 border-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"h-[100%\",\n          src: `https://image.tmdb.org/t/p/w500${e.poster_path}\n`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Trending, \"82Z7GOdLasuTjeJd4RsvsPWPqLg=\");\n\n_c = Trending;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trending\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/components/Trending.jsx"],"names":["axios","useState","useEffect","Trending","movie","setMovie","get","then","data","console","log","results","catch","error","map","e","i","poster_path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACC,OAAO,gBAAP;;AAED,OAAO,MAAMC,QAAQ,GAAI,MAAI;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,EAAjC;AAECC,EAAAA,SAAS,CAAC,MAAI;AAETF,IAAAA,KAAK,CACJM,GADD,CACK,0FADL,EAEEC,IAFF,CAEQC,IAAD,IAAQ;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAL,CAAUG,OAAtB;AACAN,MAAAA,QAAQ,CAACG,IAAI,CAACA,IAAL,CAAUG,OAAX,CAAR;AACH,KALF,EAMEC,KANF,CAMSC,KAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KARF;AAWJ,GAbQ,EAaP,EAbO,CAAT;AAkBH,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAC,uCAAjC;AAAA,4BACE;AAAI,MAAA,KAAK,EAAC,4BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGT,KAAK,gBACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGA,KAAK,CAACU,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT;AAEE,QAAA,KAAK,EAAC,yHAFR;AAAA,+BAIE;AAAK,UAAA,KAAK,EAAC,SAAX;AACE,UAAA,GAAG,EAAG,kCAAiCD,CAAC,CAACE,WAAY;AACnE,CAFY;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AAJF,SACOD,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADI,GAiBJ,EApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BC,CAlDM;;GAAMb,Q;;KAAAA,Q","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\n import \"./trending.css\"\n\nexport const Trending  = ()=>{\n\n  const [movie,setMovie] = useState();\n\n   useEffect(()=>{\n\n        axios\n        .get(\"https://api.themoviedb.org/3/trending/movie/day?api_key=b44716bfb3d62913eb0e7024880e9455\")\n         .then((data)=>{\n             console.log(data.data.results)\n             setMovie(data.data.results)\n         })            \n         .catch((error)=>{\n             console.log(error)\n         })\n\n\n   },[])\n\n\n\n\nreturn (\n  <div className=\"sliderDiv\" class=\"mt-[2rem] w-[100vm] overflow-hidden  \">\n    <h1 class=\"text-white  text-[40px]   \">Trending Movies</h1>\n\n    {movie ? (\n      <div className=\"slider  \">\n        {movie.map((e, i) => (\n          <div\n            key={i}\n            class=\" slide-track  hover:cursor-pointer hover:w-[35rem]  shadow-inner shadow-blue-500/40 hover:shadow-indigo-500/40 border-2\"\n          >\n            <img class=\"h-[100%\"\n              src={`https://image.tmdb.org/t/p/w500${e.poster_path}\n`} \n              alt=\"\"\n            />\n            {/* <h3>{e.original_title}</h3> */}\n          </div>\n        ))}\n      </div>\n    ) : (\n      \"\"\n    )}\n  </div>\n);\n\n\n\n}"]},"metadata":{},"sourceType":"module"}