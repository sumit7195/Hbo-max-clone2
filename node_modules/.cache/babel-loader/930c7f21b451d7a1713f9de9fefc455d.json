{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/components/SearchResult.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Searchresult = () => {\n  _s();\n\n  const results = useSelector(state => state.search.data);\n  const loading = useSelector(state => state.search.loading); // console.log(results);\n\n  return loading === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.map(_ref => {\n      let {\n        poster_path,\n        backdrop_path,\n        original_name,\n        original_title,\n        id\n      } = _ref;\n      console.log(poster_path);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${poster_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: original_name || original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Searchresult, \"7h5tyT/U5WZKxAahSVnRBkHxCDI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Searchresult;\nexport default Searchresult;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchresult\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/components/SearchResult.jsx"],"names":["React","useSelector","Searchresult","results","state","search","data","loading","map","poster_path","backdrop_path","original_name","original_title","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,IAAzB,CAA3B;AACA,QAAMC,OAAO,GAAGN,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaE,OAAzB,CAA3B,CAFyB,CAGzB;;AACA,SAAOA,OAAO,KAAK,IAAZ,GACL,EADK,gBAGL;AAAA,cACGJ,OAAO,CAACK,GAAR,CAAY,QAAqE;AAAA,UAApE;AAACC,QAAAA,WAAD;AAAcC,QAAAA,aAAd;AAA6BC,QAAAA,aAA7B;AAA4CC,QAAAA,cAA5C;AAA4DC,QAAAA;AAA5D,OAAoE;AAChFC,MAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAEA,0BACE;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,GAAG,EAAG,kCAAiCA,WAAa,EADtD;AAEE,YAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,iCACE;AAAA,sBAAKE,aAAa,IAAIC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAAUC,EAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAhBA;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAuBD,CA3BD;;GAAMX,Y;UACYD,W,EACAA,W;;;KAFZC,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Searchresult = () => {\n  const results = useSelector((state) => state.search.data);\n  const loading = useSelector((state) => state.search.loading);\n  // console.log(results);\n  return loading === true ? (\n    \"\"\n  ) : (\n    <div>\n      {results.map(({poster_path, backdrop_path, original_name, original_title, id}) => {\n        console.log(poster_path)\n        \n        return (\n          <div key={id}>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path }`}\n                alt=\"\"\n              />\n            </div>\n            <div>\n              <h1>{original_name || original_title}</h1>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Searchresult;\n"]},"metadata":{},"sourceType":"module"}