{"ast":null,"code":"const intialStore = {\n  loading: false,\n  data: [],\n  error: \"\"\n};\n\nconst movieDetailReducers = function () {\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialStore;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_USER_REQUEST\":\n      return { ...store,\n        loading: true\n      };\n\n    case \"FETCH_DETAIL_MOVIE\":\n      return { ...store,\n        loading: false,\n        data: action.payload\n      };\n\n    case \"FETCH_USER_FAILURE\":\n      return { ...store,\n        loading: false,\n        data: [],\n        error: action.payload\n      };\n\n    default:\n      return { ...store\n      };\n  }\n};\n\nexport default movieDetailReducers;","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/redux/moviedetail.js"],"names":["intialStore","loading","data","error","movieDetailReducers","store","action","type","payload"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,KADS;AAElBC,EAAAA,IAAI,EAAE,EAFY;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAApB;;AAMA,MAAMC,mBAAmB,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBL,WAAwB;AAAA,MAAXM,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAHR,OAAP;;AAMF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJT,OAAP;;AAOF;AACE,aAAO,EACL,GAAGH;AADE,OAAP;AAvBJ;AA2BD,CA5BD;;AA8BA,eAAeD,mBAAf","sourcesContent":["const intialStore = {\n  loading: false,\n  data: [],\n  error: \"\",\n};\n\nconst movieDetailReducers = (store = intialStore, action) => {\n  switch (action.type) {\n    case \"FETCH_USER_REQUEST\":\n      return {\n        ...store,\n        loading: true,\n      };\n\n    case \"FETCH_DETAIL_MOVIE\":\n      return {\n        ...store,\n        loading: false,\n        data: action.payload,\n      };\n\n    case \"FETCH_USER_FAILURE\":\n      return {\n        ...store,\n        loading: false,\n        data: [],\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...store,\n      };\n  }\n};\n\nexport default movieDetailReducers ;\n"]},"metadata":{},"sourceType":"module"}