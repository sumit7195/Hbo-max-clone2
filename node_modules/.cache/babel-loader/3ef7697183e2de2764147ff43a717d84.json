{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Documents/Hbo max clone/myapp/src/components/MovieDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchMovieDetail } from \"../redux/action\"; // import  useSelector  from \"react-redux\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = props => {\n  _s();\n\n  const location = useLocation(); // console.log(location.state.id)\n\n  const movieDetail = useSelector(state => state.detail.data);\n  const video = movieDetail.useEffect(() => {\n    props.fetchMovieDetail(location.state.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"this is movieDetail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/`,\n        title: \"YouTube video player\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MovieDetail, \"UHJYJ6OjmIPxqJH5YbwocxVc3+c=\", false, function () {\n  return [useLocation, useSelector];\n});\n\n_c = MovieDetail;\nexport default connect(null, {\n  fetchMovieDetail\n})(MovieDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/home/sumit/Documents/Hbo max clone/myapp/src/components/MovieDetail.jsx"],"names":["React","useLocation","connect","useSelector","useEffect","fetchMovieDetail","MovieDetail","props","location","movieDetail","state","detail","data","video","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,gBAAR,QAA+B,iBAA/B,C,CACA;;;;AAEC,MAAMC,WAAW,GAAIC,KAAD,IAAS;AAAA;;AAE9B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAF8B,CAG9B;;AACA,QAAMQ,WAAW,GAAGN,WAAW,CAAEO,KAAD,IAAUA,KAAK,CAACC,MAAN,CAAaC,IAAxB,CAA/B;AACA,QAAMC,KAAK,GAAGJ,WAAW,CACzBL,SADc,CACJ,MAAI;AAEVG,IAAAA,KAAK,CAACF,gBAAN,CAAuBG,QAAQ,CAACE,KAAT,CAAeI,EAAtC;AAEH,GALa,EAKZ,EALY,CAAd;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,GAAG,EAAG,gCAHR;AAIE,QAAA,KAAK,EAAC,sBAJR;AAKE,QAAA,WAAW,EAAC,GALd;AAME,QAAA,KAAK,EAAC,0FANR;AAOE,QAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBC,CAnCA;;GAAMR,W;UAEUL,W,EAEGE,W;;;KAJbG,W;AAsCP,eAAeJ,OAAO,CAAC,IAAD,EAAO;AAACG,EAAAA;AAAD,CAAP,CAAP,CAAkCC,WAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {fetchMovieDetail} from \"../redux/action\";\n// import  useSelector  from \"react-redux\";\n\n const MovieDetail = (props)=>{\n\nconst location = useLocation();\n// console.log(location.state.id)\nconst movieDetail = useSelector((state)=> state.detail.data)\nconst video = movieDetail.\nuseEffect(()=>{\n\n    props.fetchMovieDetail(location.state.id)\n\n},[])\n\n\n\n\nreturn (\n  <div>\n    <h1>this is movieDetail</h1>\n\n    <div className=\"movie\">\n      <iframe\n        width=\"560\"\n        height=\"315\"\n        src={`https://www.youtube.com/embed/`}\n        title=\"YouTube video player\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n    </div>\n  </div>\n);\n\n\n\n}\n\n\nexport default connect(null, {fetchMovieDetail})(MovieDetail)"]},"metadata":{},"sourceType":"module"}